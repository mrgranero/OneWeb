
/* ==========================================================================
    MIXINS
   ========================================================================== */

/* Set an appropriate line-height for elements when setting font-size. */
@mixin font-size($font-size) {
    font-size: $font-size;
    line-height: ceil($font-size / $root-line-height) * ($root-line-height / $font-size);
    margin: 0 0 ($root-line-height / $font-size) *1em +em 0;

}

/* Vendor-prefix any CSS property in one go. */
@mixin vendor($property, $value...) {
    -webkit-#{$property}: $value;
       -moz-#{$property}: $value;
        -ms-#{$property}: $value;
         -o-#{$property}: $value;
            #{$property}: $value;
}

/* The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack. */
@mixin clearfix {

    &:before,
    &:after{
        content:"";
        display:table;
    }
    &:after{
        clear:both;
    }
}

/* Hide elements visually, but leave available for screenreaders: h5bp.com/v */
@mixin visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/* Basic horizontal gradients. */
@mixin horizontal($startColor: $brand-color, $endColor: lighten($brand-color, 10%)) {
    background-color: $endColor;
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, $startColor, $endColor);                   // Safari 5.1+, Chrome 10+
    background-image: -moz-linear-gradient(left, $startColor, $endColor);                      // FF 3.6+
    background-image: -ms-linear-gradient(left, $startColor, $endColor);                       // IE10
    background-image: -o-linear-gradient(left, $startColor, $endColor);                        // Opera 11.10
    background-image: linear-gradient(left, $startColor, $endColor);                           // W3C
    background-repeat: repeat-x;
}
/* Basic vertical gradients. */
@mixin vertical($startColor: $brand-color, $endColor: lighten($brand-color, 10%)) {
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, $startColor, $endColor);                    // Safari 5.1+, Chrome 10+
    background-color: $endColor;
    background-image: -moz-linear-gradient(top, $startColor, $endColor);                       // FF 3.6+
    background-image: -ms-linear-gradient(top, $startColor, $endColor);                        // IE10
    background-image: -o-linear-gradient(top, $startColor, $endColor);                         // Opera 11.10
    background-image: linear-gradient(top, $startColor, $endColor);                            // W3C
    background-repeat: repeat-x;
}

/* Media query mixin to add a defined breakpoint. The following breakpoints
 * are defined in the defaults file but should be re-declared in
 * ui/_variables.scss.
 *
 * palm
 * lap
 * portable
 * desk
 * desk-wide
 *
 * The active breakopoint size is appended as a class to the html element, for clarity.
 *
 * Use the media query mixin like this:
 *
 * @include media-query(palm){
 *       your-styles-here;
 * }
 */

@mixin media-query($media-query) {

    @if $media-query == palm {
        @media only screen and (min-width: $palm) {
            @content;
        }
    }

    @if $media-query == lap {
        @media only screen and (min-width: $lap) {
            @content;
        }
    }

    @if $media-query == portable {
        @media only screen and (min-width: $portable) {
            @content;
        }
    }

    @if $media-query == desk {
        @media only screen and (min-width: $desk) {
            @content;
        }
    }

    @if $media-query == desk-wide {
        @media only screen and (min-width: $desk-wide) {
            @content;
        }
    }

}
